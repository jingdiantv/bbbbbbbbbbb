vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMDQ?remarks=univstar~%E5%8F%B0%E5%8C%97PNI-dip_3_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMjM?remarks=univstar~SanJose-Nato-dip_3_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMzY?remarks=univstar~Tokyo-MIKU_3_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTAx?remarks=univstar~London-OVH&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMjg?remarks=univstar~SanJose-Nato-dip_8_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwNDA?remarks=univstar~Singapore-GCORE_2_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjExOTE2?remarks=univstar~Prague-ITL_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwNDM?remarks=univstar~Singapore-GCORE_5_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMjc?remarks=univstar~SanJose-Nato-dip_7_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMzc?remarks=univstar~Tokyo-MIKU_4_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTMz?remarks=univstar~Amsterdam-DigitalOcean&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjkwNDE?remarks=univstar~Singapore-GCORE_4_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTIz?remarks=univstar~Seoul-Scloud-dip&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTEw?remarks=univstar~Riyadh-Kaopu-dip&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjI0Njo5MDI2?remarks=univstar~SanJose-Nato-dip_18&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMjU?remarks=univstar~SanJose-Nato-dip_5_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwNDQ?remarks=univstar~Singapore-GCORE_6_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMTI?remarks=univstar~%E5%BD%B0%E5%8C%96Hinet-dip_1_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTEx?remarks=univstar~Moscow-FDCservers-dip_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTA2?remarks=univstar~Manila-Kaopu-dip&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMTE?remarks=univstar~NewYork-Nearoute-dip_6_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTI2?remarks=univstar~Madrid-FDCservers&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTM0?remarks=univstar~Haifa-O.M.C.&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTA1?remarks=univstar~Dubai-Kaopu-dip&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjExOTM0?remarks=univstar~Haifa-O.M.C._1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMzU?remarks=univstar~Tokyo-MIKU_2_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTE1?remarks=univstar~NL-Meppel-ITL_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjkwNDU?remarks=univstar~Singapore-GCORE_16&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjI0NjoxMTkyMg?remarks=univstar~CO-Bogota-FDCservers-dip_4&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjI0NjoxMTkxMQ?remarks=univstar~Moscow-FDCservers-dip_4&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjkwNDU?remarks=univstar~Singapore-GCORE_8_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTE1?remarks=univstar~NL-Meppel-ITL&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTIw?remarks=univstar~TH-SamutPrakan-Bangmod&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjExOTMx?remarks=univstar~SaoPaulo-FDCservers-dip_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjkwNDQ?remarks=univstar~Singapore-GCORE_7_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjkwMzI?remarks=univstar~Tokyo-MIKU-dip_11&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTIy?remarks=univstar~CO-Bogota-FDCservers-dip_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjkwMzA?remarks=univstar~Tokyo-MIKU-dip_1_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjEzNjoxMTkxMA?remarks=univstar~Riyadh-Kaopu-dip_3&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjEzNjoxMTkwNQ?remarks=univstar~Dubai-Kaopu-dip_3&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjI0NjoxMTkyMw?remarks=univstar~Seoul-Scloud-dip_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTEy?remarks=univstar~Istanbul-Hostigger_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTI4?remarks=univstar~Athens-Kaopu-dip_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTM0?remarks=univstar~Haifa-O.M.C._2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjEzNjoxMTkyMw?remarks=univstar~Seoul-Scloud-dip_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjExOTMy?remarks=univstar~Islamabad-COMSATS-dip_4&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTMyOjkwMzk?remarks=univstar~Singapore-GCORE_2_1&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTAx?remarks=univstar~London-OVH_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjkwMTE?remarks=univstar~NewYork-Nearoute-dip_12&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjI0NjoxMTkwNg?remarks=univstar~Manila-Kaopu-dip_4&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjI0NjoxMTkwNA?remarks=univstar~Hanoi-Hostingviet-dip_4&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTIy?remarks=univstar~CO-Bogota-FDCservers-dip&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTE2LjEyOS4yNTQuMTg0OjExOTEz?remarks=univstar~Sofia-Neterra-dip&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTExLjQ1LjIyLjI0NjoxMTkzNA?remarks=univstar~Haifa-O.M.C._4&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTI2?remarks=univstar~Madrid-FDCservers_2&alterId=0
vmess://YXV0bzoyY2MxNTMyNi1jZDBmLTM0ZGEtYmJmYi1mOGNkYzliNzFlYjJAMTgzLjIzMi4yMjkuMTM0OjExOTIz?remarks=univstar~Seoul-Scloud-dip_3&alterId=0